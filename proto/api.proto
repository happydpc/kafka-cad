syntax = "proto3";
import "geom.proto";
import "representation.proto";

package api;

message BeginUndoEventInput {
    string file = 1;
    string user = 2;
}

message BeginUndoEventOutput {
}

message UndoLatestInput {
    OpPrefixMsg prefix = 1;
}

message UndoLatestOutput {
    int64 offset = 1;
}

message RedoLatestInput {
    OpPrefixMsg prefix = 1;
}

message RedoLatestOutput {
    int64 offset = 1;
}

message OpenFileInput {
    string file = 1;
}

message OpenFileOutput {
    representation.UpdateChangeMsg obj_rep = 1;
}

message OpPrefixMsg {
    string file = 1;
    string user = 2;
    int64 offset = 3;
}

message WallApiMsg {
    geom.Point3Msg first_pt = 2;
    geom.Point3Msg second_pt = 3;
    double width = 4;
    double height = 5;
}

message CreateWallsInput {
    OpPrefixMsg prefix = 1;
    repeated WallApiMsg walls = 2;
}

message CreateWallsOutput {
    repeated string obj_ids = 1;
    int64 offset = 2;
}

message MoveObjectsInput {
    OpPrefixMsg prefix = 1;
    repeated string obj_ids = 2;
    geom.Vector3Msg delta = 3;
}

message MoveObjectsOutput {
    int64 offset = 1;
}

message JoinObjectsAtPointInput {
    OpPrefixMsg prefix = 1;
    string first_id = 2;
    string second_id = 3;
    geom.Point3Msg guess = 4;
}

message JoinObjectsAtPointOutput {
    int64 offset = 1;
}

message DeleteObjectsInput {
    OpPrefixMsg prefix = 1;
    repeated string obj_ids = 2;
}

message DeleteObjectsOutput {
    int64 offset = 1;
}

service Api 
{
    rpc BeginUndoEvent(BeginUndoEventInput) returns (BeginUndoEventOutput);
    rpc UndoLatest(UndoLatestInput) returns (UndoLatestOutput);
    rpc RedoLatest(RedoLatestInput) returns (RedoLatestOutput);
    rpc OpenFile(OpenFileInput) returns (stream OpenFileOutput);
    rpc CreateWalls(CreateWallsInput) returns (CreateWallsOutput);
    rpc MoveObjects(MoveObjectsInput) returns (MoveObjectsOutput);
    rpc JoinObjectsAtPoint(JoinObjectsAtPointInput) returns (JoinObjectsAtPointOutput);
    rpc DeleteObjects(DeleteObjectsInput) returns (DeleteObjectsOutput);
}
